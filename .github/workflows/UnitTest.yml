name: UnitTest

on:
  push:
    branches: [ "master", "dev" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    name: ${{ matrix.config.name }} - ${{ matrix.build-type }}
    runs-on: ${{ matrix.config.os }}
    env:
      TARGET: unit_test
      BUILD_TYPE: ${{ matrix.build-type }}
      CC: ${{ matrix.config.cc }}
      CXX: ${{ matrix.config.cxx }}
    strategy:
      matrix:
        config:
          - name: Windows Latest MSVC
            os: windows-latest
            cc: cl
            cxx: cl
          - name: Ubuntu Latest GCC
            os: ubuntu-latest
            cc: gcc
            cxx: g++
          - name: macOS Latest Clang
            os: macos-latest
            cc: clang
            cxx: clang++
        build-type: [ Debug, Release ]

    steps:
    - name: Git Checkout
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: >
        cmake -S . -B ${{github.workspace}}/build 
        -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} 
        -DMIRAI_BUILD_UNIT_TESTS=ON
        -DMIRAI_BUILD_EXAMPLES=ON

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build/UnitTest
      if: matrix.config.name != 'Windows Latest MSVC'
      # Execute tests defined by the CMake configuration.  
      run: ./unit_test

    - name: Test - MSVC
      working-directory: ${{github.workspace}}/build/UnitTest
      if: matrix.config.name == 'Windows Latest MSVC'
      # Execute tests defined by the CMake configuration.  
      run: ./${{ matrix.build-type }}/unit_test.exe
